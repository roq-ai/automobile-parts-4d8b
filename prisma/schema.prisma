generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model order {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id String       @db.Uuid
  total_price Int
  status      String       @db.VarChar(255)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  user        user         @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  order_item  order_item[]
}

model order_item {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id   String   @db.Uuid
  part_id    String   @db.Uuid
  quantity   Int
  price      Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  order      order    @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  part       part     @relation(fields: [part_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model part {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String       @db.VarChar(255)
  price       Int
  stock_level Int
  supplier_id String       @db.Uuid
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  order_item  order_item[]
  supplier    supplier     @relation(fields: [supplier_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model search {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id String   @db.Uuid
  query       String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user     @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model supplier {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  part        part[]
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  order       order[]
  search      search[]
  supplier    supplier[]
}
